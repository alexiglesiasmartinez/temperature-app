{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","cod","document","getElementById","style","display","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","description","href","id","class","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qLAEMA,EACC,mCADDA,EAEE,2CA6FOC,MA1Ff,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAiCA,OAEE,sBAAKC,UAAmC,oBAAhBF,EAAQG,KAC1BH,EAAQG,KAAKC,KAAO,GACpB,WAAa,WAAc,MAFjC,UAGE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBACEG,KAAK,OACLH,UAAU,0BACVI,YAAY,kBACZC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WA5CK,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACvDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACU,QAAfmB,EAAOC,MACTC,SAASC,eAAe,WAAWC,MAAMC,QAAU,iBAwC9B,oBAAhBvB,EAAQG,KACf,gCACE,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQwB,KAAnC,KAA2CxB,EAAQyB,IAAIC,WACvD,qBAAKxB,UAAU,OAAf,SAjCQ,SAACyB,GACnB,IAGIC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKzGL,EAAEM,YACjBC,EAAO,CAACP,EAAEQ,eAEd,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAwBDE,CAAY,IAAIC,WAEzC,sBAAKnC,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACGoC,KAAKC,MAAMvC,EAAQG,KAAKC,MAD3B,WAGA,qBAAKF,UAAU,UAAf,SACGF,EAAQA,QAAQ,GAAGwC,oBAIvB,GACL,qBAAKtC,UAAU,WAAf,SACE,mBAAGuC,KAAK,oCAAoChC,OAAO,UAAUP,UAAU,gBAAvE,0BAIJ,qBAAKwC,GAAG,UAAUC,MAAM,QAAxB,SACE,sBAAKA,MAAM,gBAAX,UACE,sBAAKA,MAAM,eAAX,UACE,sBAAMA,MAAM,QAAQC,QA1DX,WAEjBxB,SAASC,eAAe,WAAWC,MAAMC,QAAU,QAwD3C,kBACA,4CAEF,qBAAKoB,MAAM,aAAX,SACE,oIC5EGE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASC,eAAe,SAG1BwB,K","file":"static/js/main.c343bed1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst api = {\n  key: \"0e128f999e1fb1174d7af1d207406c01\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          if (result.cod === \"404\") {\n            document.getElementById(\"myModal\").style.display = \"block\";\n          }\n        });\n    }\n  }\n\n  const closeModal = () => {\n    //alert(\"Holaaa\");\n    document.getElementById(\"myModal\").style.display = \"none\";\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = [d.getFullYear()];\n\n    return `${day} ${date} ${month} ${year}`;\n  }\n\n  return (\n\n    <div className={(typeof weather.main != \"undefined\")\n      ? ((weather.main.temp > 20)\n        ? 'app warm' : 'app cold') : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar search-focus\"\n            placeholder=\"Type a city ...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n\n        {(typeof weather.main != \"undefined\") ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">\n                {Math.round(weather.main.temp)}ÂºC\n              </div>\n              <div className=\"weather\">\n                {weather.weather[0].description}\n              </div>\n            </div>\n          </div>\n        ) : ('')}\n        <div className=\"visit-me\">\n          <a href=\"https://www.alexiglesias.in/#work\" target=\"__blank\" className=\"visit-me-link\">Go back</a>\n        </div>\n      </main>\n\n      <div id=\"myModal\" class=\"modal\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <span class=\"close\" onClick={closeModal}>&times;</span>\n            <h2>Ouups!!</h2>\n          </div>\n          <div class=\"modal-body\">\n            <p>It looks like the city you entered doesn't exist. did you spell them right? ðŸ¤”</p>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}